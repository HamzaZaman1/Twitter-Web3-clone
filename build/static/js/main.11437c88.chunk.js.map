{"version":3,"sources":["defaulttimgs.js","images/golfi.jpg","images/image.png","components/TweetInFeed.js","pages/Home.js","pages/Profile.js","pages/Setting.js","images/pfp1.png","images/pfp2.png","images/pfp3.png","images/pfp4.png","images/pfp5.png","components/Sidebar.js","images/spaceshooter.jpeg","images/netflix.jpeg","images/academy.png","images/youtube.png","images/js.png","components/Rightbar.js","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","useState","tweetArr","setTweetArr","useMoralis","Moralis","account","useEffect","a","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","error","getTweets","map","e","className","src","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","reverse","Home","user","User","current","contractProcessor","useWeb3ExecuteFunction","inputFile","useRef","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","data","file","File","name","saveIPFS","img","ipfs","options","contractAddress","functionName","abi","inputs","internalType","type","outputs","stateMutability","params","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","message","newTweet","set","pfp","ethAddress","username","save","window","location","reload","label","value","onChange","target","width","onClick","click","ref","event","files","URL","createObjectURL","style","display","backgroundColor","Profile","banner","to","bio","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","setUsername","setBio","isAuthenticated","Web3Api","useMoralisWeb3Api","fetchNFTs","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","image","includes","replace","saveEdits","first","myDetails","labelBgColor","i","Sidebar","Rightbar","trends","spaceshooter","text","link","netflix","academy","js","youtube","prefixIcon","open","App","logOut","then","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.11437c88.chunk.js","sourcesContent":["export const defaultImgs = [\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\r\n];\r\n","export default __webpack_public_path__ + \"static/media/golfi.3a61c53b.jpg\";","export default __webpack_public_path__ + \"static/media/image.686ad2c0.png\";","import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golfi from \"../images/golfi.jpg\";\r\nimport image from \"../images/image.png\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n  const [tweetArr, setTweetArr] = useState();\r\n  const { Moralis, account } = useMoralis();\r\n\r\n  useEffect(() => {\r\n    async function getTweets() {\r\n      try {\r\n        const Tweets = Moralis.Object.extend(\"Tweets\");\r\n        const query = new Moralis.Query(Tweets);\r\n        if (profile) {\r\n          query.equalTo(\"tweeterAcc\", account);\r\n        }\r\n        const results = await query.find();\r\n\r\n        setTweetArr(results);\r\n        console.log(results);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getTweets();\r\n  }, [profile]);\r\n\r\n  return (\r\n    <>\r\n      {tweetArr\r\n        ?.map((e) => {\r\n          return (\r\n            <>\r\n              <div className=\"feedTweet\">\r\n                <img\r\n                  src={\r\n                    e.attributes.tweeterPfp\r\n                      ? e.attributes.tweeterPfp\r\n                      : defaultImgs[0]\r\n                  }\r\n                  className=\"profilePic\"\r\n                ></img>\r\n                <div className=\"completeTweet\">\r\n                  <div className=\"who\">\r\n                    {e.attributes.tweeterUserName.slice(0, 6)}\r\n                    <div className=\"accWhen\">\r\n                      {`${e.attributes.tweeterAcc.slice(\r\n                        0,\r\n                        4\r\n                      )}...${e.attributes.tweeterAcc.slice(38)} · \r\n                        ${e.attributes.createdAt.toLocaleString(\"en-us\", {\r\n                          month: \"short\",\r\n                        })}  \r\n                        ${e.attributes.createdAt.toLocaleString(\"en-us\", {\r\n                          day: \"numeric\",\r\n                        })}\r\n                        `}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tweetContent\">\r\n                    {e.attributes.tweetTxt}\r\n                    {e.attributes.tweetImg && (\r\n                      <img\r\n                        src={e.attributes.tweetImg}\r\n                        className=\"tweetImg\"\r\n                      ></img>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"interactions\">\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                    </div>\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                      12\r\n                    </div>\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\nimport { TextArea, Icon } from \"web3uikit\";\r\nimport { useState, useRef } from \"react\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\n\r\nconst Home = () => {\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const [tweet, setTweet] = useState();\r\n\r\n  async function maticTweet() {\r\n    if (!tweet) return;\r\n\r\n    let img;\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      img = file.ipfs();\r\n    } else {\r\n      img = \"No Img\";\r\n    }\r\n\r\n    let options = {\r\n      contractAddress: \"0xd9145CCE52D386f254917e481eB44e9943F39138\",\r\n      functionName: \"addTweet\",\r\n      abi: [\r\n        {\r\n          inputs: [\r\n            {\r\n              internalType: \"string\",\r\n              name: \"tweetTxt\",\r\n              type: \"string\",\r\n            },\r\n            {\r\n              internalType: \"string\",\r\n              name: \"tweetImg\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          name: \"addTweet\",\r\n          outputs: [],\r\n          stateMutability: \"payable\",\r\n          type: \"function\",\r\n        },\r\n      ],\r\n      params: {\r\n        tweetTxt: tweet,\r\n        tweetImg: img,\r\n      },\r\n      msgValue: Moralis.Units.ETH(1),\r\n    };\r\n\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        saveTweet();\r\n      },\r\n      onError: (error) => {\r\n        console.log(error.data.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  async function saveTweet() {\r\n    if (!tweet) return;\r\n\r\n    const Tweets = Moralis.Object.extend(\"Tweets\");\r\n\r\n    const newTweet = new Tweets();\r\n\r\n    newTweet.set(\"tweetTxt\", tweet);\r\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\r\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\r\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      newTweet.set(\"tweetImg\", file.ipfs());\r\n    }\r\n\r\n    await newTweet.save();\r\n    window.location.reload();\r\n  }\r\n\r\n  const onImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Home</div>\r\n      <div className=\"mainContent\">\r\n        <div className=\"profileTweet\">\r\n          <img\r\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\r\n            className=\"profilePic\"\r\n          ></img>\r\n          <div className=\"tweetBox\">\r\n            <TextArea\r\n              label=\"\"\r\n              name=\"tweetTxtArea\"\r\n              value=\"GM World\"\r\n              type=\"text\"\r\n              onChange={(e) => setTweet(e.target.value)}\r\n              width=\"95%\"\r\n            ></TextArea>\r\n            {selectedFile && (\r\n              <img src={selectedFile} className=\"tweetImg\"></img>\r\n            )}\r\n            <div className=\"imgOrTweet\">\r\n              <div className=\"imgDiv\" onClick={onImageClick}>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  ref={inputFile}\r\n                  onChange={changeHandler}\r\n                  style={{ display: \"none\" }}\r\n                />\r\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n              </div>\r\n              <div className=\"tweetOptions\">\r\n                <div className=\"tweet\" onClick={saveTweet}>\r\n                  Tweet\r\n                </div>\r\n                <div\r\n                  className=\"tweet\"\r\n                  onClick={maticTweet}\r\n                  style={{ backgroundColor: \"#8247e5\" }}\r\n                >\r\n                  <Icon fill=\"#ffffff\" size={20} svg=\"matic\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TweetInFeed profile={false} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Profile.css\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\nconst Profile = () => {\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Profile</div>\r\n      <img\r\n        className=\"profileBanner\"\r\n        src={user.attributes.banner ? user.attributes.banner : defaultImgs[1]}\r\n      ></img>\r\n      <div className=\"pfpContainer\">\r\n        <img\r\n          className=\"profilePFP\"\r\n          src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\r\n        ></img>\r\n        <div className=\"profileName\">\r\n          {user.attributes.username.slice(0, 6)}\r\n        </div>\r\n        <div className=\"profileWallet\">{`${user.attributes.ethAddress.slice(\r\n          0,\r\n          4\r\n        )}...\r\n            ${user.attributes.ethAddress.slice(38)}`}</div>\r\n        <Link to=\"/settings\">\r\n          <div className=\"profileEdit\">Edit profile</div>\r\n        </Link>\r\n        <div className=\"profileBio\">{user.attributes.bio}</div>\r\n        <div className=\"profileTabs\">\r\n          <div className=\"profileTab\">Your Tweets</div>\r\n        </div>\r\n      </div>\r\n      <TweetInFeed profile={true}></TweetInFeed>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./Setting.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nconst Settings = () => {\r\n  const [pfps, setPfps] = useState([]);\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n  const [theFile, setTheFile] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [bio, setBio] = useState();\r\n  const { Moralis, isAuthenticated, account } = useMoralis();\r\n  const Web3Api = useMoralisWeb3Api();\r\n\r\n  const resolveLink = (url) => {\r\n    if (!url || !url.includes(\"ipfs://\")) return url;\r\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchNFTs = async () => {\r\n      const options = {\r\n        chain: \"mumbai\",\r\n        address: account,\r\n      };\r\n\r\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n      const images = mumbaiNFTs.result.map((e) =>\r\n        resolveLink(JSON.parse(e.metadata)?.image)\r\n      );\r\n      setPfps(images);\r\n    };\r\n\r\n    fetchNFTs();\r\n  }, [isAuthenticated, account]);\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n\r\n    if (bio) {\r\n      myDetails.set(\"bio\", bio);\r\n    }\r\n\r\n    if (selectedPFP) {\r\n      myDetails.set(\"pfp\", selectedPFP);\r\n    }\r\n\r\n    if (username) {\r\n      myDetails.set(\"username\", username);\r\n    }\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      myDetails.set(\"banner\", file.ipfs());\r\n    }\r\n\r\n    await myDetails.save();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Settings</div>\r\n      <div className=\"settingsPage\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"NameChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          label=\"Bio\"\r\n          name=\"bioChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e) => setBio(e.target.value)}\r\n        />\r\n\r\n        <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n          <div className=\"pfpOptions\">\r\n            {pfps.map((e, i) => {\r\n              return (\r\n                <>\r\n                  <img\r\n                    src={e}\r\n                    className={\r\n                      selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n                    }\r\n                    onClick={() => {\r\n                      setSelectedPFP(pfps[i]);\r\n                    }}\r\n                  ></img>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","export default __webpack_public_path__ + \"static/media/pfp1.394c20a6.png\";","export default __webpack_public_path__ + \"static/media/pfp2.77db00e7.png\";","export default __webpack_public_path__ + \"static/media/pfp3.63c3a335.png\";","export default __webpack_public_path__ + \"static/media/pfp4.b4e70662.png\";","export default __webpack_public_path__ + \"static/media/pfp5.ba3d30f6.png\";","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\n\r\nconst Sidebar = () => {\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"siderContent\">\r\n        <div className=\"menu\">\r\n          <div className=\"details\">\r\n            <Icon fill=\"#ffffff\" size={33} svg=\"twitter\" />\r\n          </div>\r\n\r\n          <Link to=\"/\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"list\" />\r\n              Home\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/profile\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"user\" />\r\n              Profile\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/settings\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"cog\" />\r\n              Settings\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"details\">\r\n          <img\r\n            src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\r\n            className=\"profilePic\"\r\n          ></img>\r\n          <div className=\"profile\">\r\n            <div className=\"who\">{user.attributes.username.slice(0, 6)}</div>\r\n            <div className=\"accWhen\">\r\n              {`${user.attributes.ethAddress.slice(\r\n                0,\r\n                4\r\n              )}...${user.attributes.ethAddress.slice(38)}`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/spaceshooter.efac87b8.jpeg\";","export default __webpack_public_path__ + \"static/media/netflix.411c7033.jpeg\";","export default __webpack_public_path__ + \"static/media/academy.c7a89823.png\";","export default __webpack_public_path__ + \"static/media/youtube.afdf35e4.png\";","export default __webpack_public_path__ + \"static/media/js.33c19307.png\";","import React from \"react\";\r\nimport \"./Rightbar.css\";\r\nimport spaceshooter from \"../images/spaceshooter.jpeg\";\r\nimport netflix from \"../images/netflix.jpeg\";\r\nimport academy from \"../images/academy.png\";\r\nimport youtube from \"../images/youtube.png\";\r\nimport js from \"../images/js.png\";\r\nimport { Input } from \"web3uikit\";\r\n\r\nconst Rightbar = () => {\r\n  const trends = [\r\n    {\r\n      img: spaceshooter,\r\n      text: \"Learn how to build a Web3 FPS game using unity...\",\r\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-space-fps-game/\",\r\n    },\r\n    {\r\n      img: netflix,\r\n      text: \"The fisrt Moralis Project! Let's Netflix and chill...\",\r\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-netflix-clone/\",\r\n    },\r\n    {\r\n      img: academy,\r\n      text: \"Master DeFi in 2022. Start  at the Moralis Academy...\",\r\n      link: \"https://academy.moralis.io/courses/defi-101\",\r\n    },\r\n    {\r\n      img: js,\r\n      text: \"Become a Web3 Developer with just simple JS...\",\r\n      link: \"https://academy.moralis.io/all-courses\",\r\n    },\r\n    {\r\n      img: youtube,\r\n      text: \"Best youtube channel to learn about Web3...\",\r\n      link: \"https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rightbarContent\">\r\n        <Input\r\n          label=\"Search Twitter\"\r\n          name=\"Search Twitter\"\r\n          prefixIcon=\"search\"\r\n          labelBgColor=\"#141d26\"\r\n        ></Input>\r\n\r\n        <div className=\"trends\">\r\n          News For You\r\n          {trends.map((e) => {\r\n            return (\r\n              <>\r\n                <div className=\"trend\" onClick={() => window.open(e.link)}>\r\n                  <img src={e.img} className=\"trendImg\"></img>\r\n                  <div className=\"trendText\">{e.text}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rightbar;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Settings from \"./pages/Setting\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Rightbar from \"./components/Rightbar\";\r\nimport \"./App.css\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { ConnectButton, Icon } from \"web3uikit\";\r\n\r\nconst App = () => {\r\n  const { isAuthenticated, Moralis } = useMoralis();\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <div className=\"page\">\r\n          <div className=\"sideBar\">\r\n            <Sidebar />\r\n            <div\r\n              className=\"logout\"\r\n              onClick={() => {\r\n                Moralis.User.logOut().then(() => {\r\n                  window.location.reload();\r\n                });\r\n              }}\r\n            >\r\n              Logout\r\n            </div>\r\n          </div>\r\n          <div className=\"mainWindow\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n              <Route path=\"/settings\" element={<Settings />} />\r\n            </Routes>\r\n          </div>\r\n          <div className=\"rightBar\">\r\n            <Rightbar />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loginPage\">\r\n          <Icon fill=\"#ffffff\" size={40} svg=\"twitter\" />\r\n          <ConnectButton />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from \"web3uikit\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider\r\n      appId=\"zIqM5CgG114IVj03KeIhT3Pz1obIFdRo3aXdFU1U\"\r\n      serverUrl=\"https://k78bhjq99wr0.usemoralis.com:2053/server\"\r\n    >\r\n      <NotificationProvider>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}