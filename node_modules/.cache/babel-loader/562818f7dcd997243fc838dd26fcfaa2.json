{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Twitter web3 clone\\\\src\\\\pages\\\\Setting.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Setting.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { defaultImgs } from \"../defaulttimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP) {\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"zZmu8aC7Dei0Go0KfzZb9IS2aOg=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/Projects/Twitter web3 clone/src/pages/Setting.js"],"names":["React","Link","useState","useRef","useEffect","Input","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","e","value","map","i","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Setting.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { defaultImgs } from \"../defaulttimgs\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\nconst Settings = () => {\r\n  const [pfps, setPfps] = useState([]);\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n  const [theFile, setTheFile] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [bio, setBio] = useState();\r\n  const { Moralis, isAuthenticated, account } = useMoralis();\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n\r\n    if (bio) {\r\n      myDetails.set(\"bio\", bio);\r\n    }\r\n\r\n    if (selectedPFP) {\r\n      myDetails.set(\"pfp\", selectedPFP);\r\n    }\r\n\r\n    if (username) {\r\n      myDetails.set(\"username\", username);\r\n    }\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      myDetails.set(\"banner\", file.ipfs());\r\n    }\r\n\r\n    await myDetails.save();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Settings</div>\r\n      <div className=\"settingsPage\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"NameChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          label=\"Bio\"\r\n          name=\"bioChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e) => setBio(e.target.value)}\r\n        />\r\n\r\n        <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n          <div className=\"pfpOptions\">\r\n            {pfps.map((e, i) => {\r\n              return (\r\n                <>\r\n                  <img\r\n                    src={e}\r\n                    className={\r\n                      selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n                    }\r\n                    onClick={() => {\r\n                      setSelectedPFP(pfps[i]);\r\n                    }}\r\n                  ></img>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}